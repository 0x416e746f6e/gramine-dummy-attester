version: '3.9'

services:

  dummyattester:
    container_name: dummyattester
    image: gramine-dummy-attester
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        DEBUG: "${DEBUG-0}"
        RA_CLIENT_SPID: "${RA_CLIENT_SPID-51CAF5A48B450D624AEFE3286D314894}"
    command: ["python", "server.py"]
    stop_signal: SIGINT
    environment:
      DEBUG: "${DEBUG-0}"
      SGX: 0 #-1 for plain, 0 for gramine-direct
      PORT: 8080
      TLS: 0
    volumes:
      - ./data:/data
      - untrustedhost:/untrustedhost
      - /var/run/aesmd/aesm.socket:/var/run/aesmd/aesm.socket
    devices:
      - /dev/sgx_enclave
      - /dev/sgx_provision

  dummyattester-dcap:
    container_name: dummyattester-dcap
    image: gramine-dummy-attester-dcap
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        DEBUG: "${DEBUG-0}"
        RA_TYPE: "dcap"
    command: ["python", "server.py"]
    stop_signal: SIGINT
    environment:
      DEBUG: "${DEBUG-0}"
      PORT: 8080
      RA_TYPE: dcap
      SGX: 1 #-1 for plain, 0 for gramine-direct
      TLS: 0
    volumes:
      - ./data:/data
      - untrustedhost:/untrustedhost
      - /var/run/aesmd/aesm.socket:/var/run/aesmd/aesm.socket
    devices:
      - /dev/sgx_enclave
      - /dev/sgx_provision

  flaskserver:
    container_name: flaskserver
    image: flaskserver
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        DEBUG: "${DEBUG-0}"
    command:
      - /bin/sh
      - -c
      - |-
        cd /app/gramine-dummy-attester/scripts/
        pip install eth_abi==4.2.1 flask==3.0.0
        flask --app flaskserver run --host 0.0.0.0 --port $$PORT
    stop_signal: SIGINT
    stop_grace_period: 1s
    environment:
      HOST_EPID: dummyattester
      PORT_EPID: 8080
      HOST_DCAP: dummyattester-dcap
      PORT_DCAP: 8080
      RA_API_KEY: "${RA_API_KEY-00000000000000000000000000000000}"
      PORT: 8000
    ports:
      - 127.0.0.1:8000:8000

volumes:
  untrustedhost:
  data:
